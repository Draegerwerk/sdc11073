name: Build package

on:
  workflow_call:
  pull_request:
    types: [ opened, synchronize, reopened, ready_for_review ]

env:
  SDC11073_VERSION: 0.0.0

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      WHL: ${{ steps.filenames.outputs.WHL }}
      TARGZ: ${{ steps.filenames.outputs.TARGZ }}

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Detect new version
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          echo SDC11073_VERSION=${GITHUB_REF/refs\/tags\/v/} >> $GITHUB_ENV
          echo SDC11073_VERSION=$SDC11073_VERSION

      - name: Install Python dependencies
        run: pip install -r requirements.txt wheel

      - name: Build package
        run: python setup.py clean --all bdist_wheel

      - name: Set filenames in output
        id: filenames
        run: |
          echo WHL=$(echo dist/*.whl) >> $GITHUB_OUTPUT
          echo TARGZ=$(echo dist/*.tar.gz) >> $GITHUB_OUTPUT

      - name: Archive package
        uses: actions/upload-artifact@v3
        with:
          name: distributions
          path: dist
          retention-days: 5

  tests:
    name: Run tests
    needs: build

    strategy:
      matrix:
        python-version: [ "3.7", "3.8" , "3.9", "3.10", "3.11" ]
        os: [ ubuntu-latest, windows-latest ]
        distribution: [ "${{ needs.build.outputs.WHL }}", "${{ needs.build.outputs.TARGZ}}" ]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Remove sources
        run: rm -r sdc11073  # delete source directory, such that tests are run against the installed packed

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: distributions
          path: dist

      - name: Install package
        run: pip install ${{ matrix.distribution }}

      - name: Install test dependencies
        run: pip install pytest pytest-html

      - name: Run pytest
        run: pytest --html=pytest_reports/unittest_report_${{ matrix.os }}_py${{ matrix.python-version }}_${{ matrix.distribution }}.html --self-contained-html tests

      - name: Archive test result
        uses: actions/upload-artifact@v3
        if: success() || failure()  # upload artifacts also if test stage failed
        with:
          name: unittest_reports
          path: pytest_reports/*.html
          retention-days: 1